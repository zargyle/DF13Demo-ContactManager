{
  "name": "grunt-ant-sfdc",
  "description": "Add salesforce and force.com ANT tasks to your grunt builds",
  "version": "0.1.3",
  "homepage": "https://github.com/kevinohara80/grunt-ant-sfdc",
  "author": {
    "name": "Kevin O'Hara",
    "email": "kevinohara80@gmail.com",
    "url": "http://kevinmohara.com"
  },
  "repository": {
    "type": "git",
    "url": "git://github.com/kevinohara80/grunt-ant-sfdc.git"
  },
  "bugs": {
    "url": "https://github.com/kevinohara80/grunt-ant-sfdc/issues"
  },
  "licenses": [
    {
      "type": "MIT",
      "url": "https://github.com/kevinohara80/grunt-ant-sfdc/blob/master/LICENSE-MIT"
    }
  ],
  "main": "Gruntfile.js",
  "engines": {
    "node": ">= 0.8.0"
  },
  "scripts": {
    "test": "grunt test"
  },
  "devDependencies": {
    "grunt-contrib-jshint": "~0.1.1",
    "grunt": "~0.4.0"
  },
  "peerDependencies": {
    "grunt": "~0.4.0"
  },
  "keywords": [
    "gruntplugin",
    "salesforce",
    "salesforce.com",
    "ant",
    "force.com",
    "deploy",
    "metadata"
  ],
  "readme": "# grunt-ant-sfdc\n\n> Add salesforce and force.com ANT tasks to your grunt builds\n\n## Getting Started\nThis plugin requires Grunt `~0.4.0`\n\nThis plugin also requires the [Force.com Migration Tool](http://wiki.developerforce.com/page/Migration_Tool_Guide) be installed and configured on your machine.\n\nIf you haven't used [Grunt](http://gruntjs.com/) before, be sure to check out the [Getting Started](http://gruntjs.com/getting-started) guide, as it explains how to create a [Gruntfile](http://gruntjs.com/sample-gruntfile) as well as install and use Grunt plugins. Once you're familiar with that process, you may install this plugin with this command:\n\n```shell\nnpm install grunt-ant-sfdc --save-dev\n```\n\nOne the plugin has been installed, it may be enabled inside your Gruntfile with this line of JavaScript:\n\n```js\ngrunt.loadNpmTasks('grunt-ant-sfdc');\n```\n\n## The \"antdeploy\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `antdeploy` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  antdeploy: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.root\nType: `String`\nDefault value: `'build/'`\n\nThe `build` options sets the base directory where metadata lives\n\n#### options.version\nType: `String`\nDefault value: `'27.0'`\n\nThis option sets the api version to use for the package deployment\n\n### Usage Examples\n\n#### Single Org Deploy\nIn this example, we will deploy all static resources to a single org\n\n```js\ngrunt.initConfig({\n  antdeploy: {\n    options: {},\n    // specify one deploy target\n    dev1: {\n      user:       'myusername@gmail.com',\n      pass:       'mypassword',\n      token:      'myauthtoken',\n      serverurl:  'https://test.salesforce.com' // default => https://login.salesforce.com\n      pkg: {\n        staticresource: ['*']\n      }\n    }\n  }\n})\n```\n\n#### Multiple Org Deploy w/ Default Options\nIn this example, we specify two different org deploy targets with different metadata for each\n\n```js\ngrunt.initConfig({\n  antdeploy: {\n    options: {\n      root: 'my/metadata/', // note trailing slash is important\n      version: '27.0'\n    },\n    // specify one deploy target\n    dev1: {\n      user:  'myusername1@gmail.com',\n      pass:  'mypassword',\n      token: 'myauthtoken',\n      pkg: {\n        staticresource: ['*']\n      }\n    },\n    dev2: {\n      user:  'myusername2@gmail.com',\n      pass:  'mypassword',\n      token: 'myauthtoken',\n      pkg: {\n        staticresource: ['resource1', 'resource2'],\n        apexclass:      ['class1', 'class2']\n      }\n    }\n  }\n})\n```\n\n## The \"antretrieve\" task\n\n### Overview\nIn your project's Gruntfile, add a section named `antretrieve` to the data object passed into `grunt.initConfig()`.\n\n```js\ngrunt.initConfig({\n  antretrieve: {\n    options: {\n      // Task-specific options go here.\n    },\n    your_target: {\n      // Target-specific file lists and/or options go here.\n    },\n  },\n})\n```\n\n### Options\n\n#### options.root\nType: `String`\nDefault value: `'build/'`\n\nThe `build` options sets the base directory where metadata lives\n\n#### options.version\nType: `String`\nDefault value: `'27.0'`\n\nThis option sets the api version to use for the package deployment\n\n### Usage Examples\n\n#### Single Org Retrieve\nIn this example, we will retrieve all static resources, classes, and apexpages from a single org\n\n```js\ngrunt.initConfig({\n  antretrieve: {\n    options: {},\n    // specify one deploy target\n    dev1: {\n      user:       'myusername@gmail.com',\n      pass:       'mypassword',\n      token:      'myauthtoken',\n      serverurl:  'https://test.salesforce.com' // default => https://login.salesforce.com\n      pkg: {\n        staticresource: ['*'],\n        apexclass:      ['*'],\n        apexpage:       ['*']\n      }\n    }\n  }\n})\n```\n\n#### Single Org, multiple retrieve example\nIn this example, we specify one org but multiple retrieve targets\n\n```js\ngrunt.initConfig({\n  antretrieve: {\n    options: {\n      root:    'metadata/',\n      version: '27.0'\n    },\n    // specify one deploy target\n    dev1all: {\n      user:       'myusername@gmail.com',\n      pass:       'mypassword',\n      token:      'myauthtoken',\n      pkg: {\n        staticresource: ['*'],\n        apexclass:      ['*'],\n        apexpage:       ['*']\n      }\n    },\n    dev1classes: {\n      user:       'myusername@gmail.com',\n      pass:       'mypassword',\n      token:      'myauthtoken',\n      pkg: {\n        apexclass:      ['*']\n      }\n    },\n    dev1module: {\n      user:       'myusername@gmail.com',\n      pass:       'mypassword',\n      token:      'myauthtoken',\n      pkg: {\n        apexclass:      ['MyClass', 'MyClassTest'],\n        apexpage:       ['MyPage'],\n        staticresource: ['MyPageResource'],\n        apextrigger:    ['MyObjectTrigger']\n      }\n    }\n  }\n})\n```\n\n## Contributing\nIn lieu of a formal styleguide, take care to maintain the existing coding style. Add unit tests for any new or changed functionality. Lint and test your code using [Grunt](http://gruntjs.com/).\n\n## Release History\n_(Nothing yet)_\n",
  "readmeFilename": "README.md",
  "_id": "grunt-ant-sfdc@0.1.3",
  "_from": "grunt-ant-sfdc@0.1.3"
}
